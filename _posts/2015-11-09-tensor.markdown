---
layout: post
title:  "tensor"
date:   2015-11-09 23:30:00
author: Nick Kasprzak
categories: AI
cover: assets/t_3.jpg
---


Google Tensor came out today. I wonder how difficult it was to use so I looked at the documentation and some Python examples.
	
It is a library for the optimization of machine learning algorithms, similar to Theano. You write a model you want to optimize as a graph of symbolic expressions, and the library will compile this graph to be executed on a target platform (could be CPU, GPU). This is really neat because you essentially wrote your program in Python and now it's going to be running as optimized C++ code (or as optimized kernels on your GPU).

The fact that you defined your model as a symbolic graph means you can derive gradient equations automatically, hence ridding you of a rather tedious step in optimization. With such tools, the workflow for a practitioner is much simpler: 1-code models as graphs of symbolic expressions, and 2-define objective functions (ex. for a regression problem, your objective would be the root mean squared error, plus some regularization). Disclaimer: I did not look at the code, but from what I understand it is pretty much the same as Theano (which I've been using a lot lately).

[paper](http://download.tensorflow.org/paper/whitepaper2015.pdf)


[example using Nile](http://tinlizzie.org/dbjr/high_contrast.html).
